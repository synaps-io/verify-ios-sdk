// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.0.2 effective-5.10 (swiftlang-6.0.2.1.2 clang-1600.0.26.4)
// swift-module-flags: -target arm64-apple-ios15.0-macabi -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name SynapsVerify
// swift-module-flags-ignorable: -no-verify-emitted-module-interface
import AVFoundation
import Combine
import CoreNFC
import Foundation
import Swift
import SwiftUI
import UIKit
import WebKit
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os
@available(iOS 15.0, *)
@_Concurrency.MainActor @preconcurrency public struct VerifyView : SwiftUI.UIViewRepresentable {
  @_Concurrency.MainActor @preconcurrency public init(sessionId: Swift.String, lang: SynapsVerify.VerifyLang = .english, tier tierIdentifier: Swift.String? = nil)
  @_Concurrency.MainActor @preconcurrency public init(sessionId: Swift.String, lang: SynapsVerify.VerifyLang = .english, tier tierIdentifier: Swift.String? = nil, hideClose: Swift.Bool = false)
  @_Concurrency.MainActor @preconcurrency public init(sessionId: Swift.String, lang: SynapsVerify.VerifyLang = .english, tier tierIdentifier: Swift.String? = nil, queryItems: [Foundation.URLQueryItem])
  @_Concurrency.MainActor @preconcurrency public func makeUIView(context: SynapsVerify.VerifyView.Context) -> WebKit.WKWebView
  @_Concurrency.MainActor @preconcurrency public func updateUIView(_ webView: WebKit.WKWebView, context: SynapsVerify.VerifyView.Context)
  @_Concurrency.MainActor @preconcurrency public func onReady(perform action: (() -> Swift.Void)?) -> SynapsVerify.VerifyView
  @_Concurrency.MainActor @preconcurrency public func onFinished(perform action: (() -> Swift.Void)?) -> SynapsVerify.VerifyView
  @available(iOS 15.0, *)
  public typealias Body = Swift.Never
  @available(iOS 15.0, *)
  public typealias Coordinator = Swift.Void
  @available(iOS 15.0, *)
  public typealias UIViewType = WebKit.WKWebView
}
@objc @_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @available(iOS 15.0, *)
@_Concurrency.MainActor @preconcurrency public class VerifyUiView : UIKit.UIView {
  @_Concurrency.MainActor @preconcurrency public func startSession(sessionId: Swift.String, lang: SynapsVerify.VerifyLang = .english, tier tierIdentifier: Swift.String? = nil, hideClose: Swift.Bool = false, queryItems: [Foundation.URLQueryItem]? = nil)
  @_Concurrency.MainActor @preconcurrency public func onReady(perform action: (() -> Swift.Void)?)
  @_Concurrency.MainActor @preconcurrency public func onFinished(perform action: (() -> Swift.Void)?)
  @objc deinit
}
@_hasMissingDesignatedInitializers public class Verify {
  public static let shared: SynapsVerify.Verify
  public var debug: Swift.Bool
  @objc deinit
}
public enum VerifyLang {
  case english
  case french
  case german
  case spanish
  case italian
  case japanese
  case korean
  case portuguese
  case romanian
  case russian
  case turkish
  case vietnamese
  case chinese
  case chineseTraditional
  public static func from(code: Swift.String) -> SynapsVerify.VerifyLang
  public static func == (a: SynapsVerify.VerifyLang, b: SynapsVerify.VerifyLang) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 15.0, *)
extension SynapsVerify.VerifyView : Swift.Sendable {}
extension SynapsVerify.VerifyLang : Swift.Equatable {}
extension SynapsVerify.VerifyLang : Swift.Hashable {}
